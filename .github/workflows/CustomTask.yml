# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: GitHub Actions Workflow with SNOW custom tasks

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#      branches: [ master ]
#   pull_request:
#     types: [opened, synchronize, reopened]

on: workflow_dispatch
#  pull_request_target:
#    types:
#      - closed

jobs:
    test:
        name: Test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2.0.0
              with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

            - name: List current directory
              run: ls -a

            - name: Run Tests with Maven
              run: mvn -B test --file pom.xml


            - name: What's in the target directory
              run: |
                    cd target
                    ls -a

           
            - name: ServiceNow DevOps Unit Test Results
            # You may pin to the exact commit or the version.
            # uses: ServiceNow/servicenow-devops-test-report@6c7ef85f6aedfb7ab17e4d17c52c14c5f2f455fd
              uses: ServiceNow/servicenow-devops-test-report@v2.0.0
              with:
                  # Devops Integration User Name
                  devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
                  # Devops Integration User Password
                  devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
                  # ServiceNow Instance Name
                  instance-url: ${{ secrets.SN_INSTANCE_URL }}
                  # Orchestration Tool Id
                  tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
                  # Job Name
                  job-name: 'Test' # Should be same name as declared in 'name' clause of the current Stage
                  # Github Context
                  context-github: ${{ toJSON(github) }}
                  # JUnit xml report file name with path
                  xml-report-filename: target/surefire-reports/testng-results.xml # if only JUnit tests, use target/surefire-reports/testng-results.xml
                                                                                  # if both JUnit & TestNG tests, use target/surefire-reports/testng-junit-results/testng-results.xml
                  # GitHub Custom Action
                  test-type: # optional, default is JUnit
